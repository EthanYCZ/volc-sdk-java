// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vod/business/vod_upload.proto

package com.volcengine.model.vod.business;

public interface VodQueryUploadResultOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Volcengine.Models.Vod.Business.VodQueryUploadResult)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .Volcengine.Models.Vod.Business.VodURLSet VideoInfoList = 1;</code>
   */
  java.util.List<com.volcengine.model.vod.business.VodURLSet> 
      getVideoInfoListList();
  /**
   * <code>repeated .Volcengine.Models.Vod.Business.VodURLSet VideoInfoList = 1;</code>
   */
  com.volcengine.model.vod.business.VodURLSet getVideoInfoList(int index);
  /**
   * <code>repeated .Volcengine.Models.Vod.Business.VodURLSet VideoInfoList = 1;</code>
   */
  int getVideoInfoListCount();
  /**
   * <code>repeated .Volcengine.Models.Vod.Business.VodURLSet VideoInfoList = 1;</code>
   */
  java.util.List<? extends com.volcengine.model.vod.business.VodURLSetOrBuilder> 
      getVideoInfoListOrBuilderList();
  /**
   * <code>repeated .Volcengine.Models.Vod.Business.VodURLSet VideoInfoList = 1;</code>
   */
  com.volcengine.model.vod.business.VodURLSetOrBuilder getVideoInfoListOrBuilder(
      int index);

  /**
   * <code>repeated string NotExistJobIds = 2;</code>
   * @return A list containing the notExistJobIds.
   */
  java.util.List<java.lang.String>
      getNotExistJobIdsList();
  /**
   * <code>repeated string NotExistJobIds = 2;</code>
   * @return The count of notExistJobIds.
   */
  int getNotExistJobIdsCount();
  /**
   * <code>repeated string NotExistJobIds = 2;</code>
   * @param index The index of the element to return.
   * @return The notExistJobIds at the given index.
   */
  java.lang.String getNotExistJobIds(int index);
  /**
   * <code>repeated string NotExistJobIds = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the notExistJobIds at the given index.
   */
  com.google.protobuf.ByteString
      getNotExistJobIdsBytes(int index);
}
